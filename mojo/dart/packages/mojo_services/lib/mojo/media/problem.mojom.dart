// WARNING: DO NOT EDIT. This file was generated by a program.
// See $MOJO_SDK/tools/bindings/mojom_bindings_generator.py.

library problem_mojom;
import 'package:mojo/bindings.dart' as bindings;




class Problem extends bindings.Struct {
  static const List<bindings.StructDataHeader> kVersions = const [
    const bindings.StructDataHeader(24, 0)
  ];
  static const String kProblemInternal = "ProblemInternal";
  static const String kProblemAssetNotFound = "ProblemAssetNotFound";
  static const String kProblemMediaTypeNotSupported = "ProblemMediaTypeNotSupported";
  String type = null;
  String details = null;

  Problem() : super(kVersions.last.size);

  Problem.init(
    String this.type, 
    String this.details
  ) : super(kVersions.last.size);

  static Problem deserialize(bindings.Message message) =>
      bindings.Struct.deserialize(decode, message);

  static Problem decode(bindings.Decoder decoder0) {
    if (decoder0 == null) {
      return null;
    }
    Problem result = new Problem();
    var mainDataHeader = bindings.Struct.checkVersion(decoder0, kVersions);
    if (mainDataHeader.version >= 0) {
      
      result.type = decoder0.decodeString(8, false);
    }
    if (mainDataHeader.version >= 0) {
      
      result.details = decoder0.decodeString(16, true);
    }
    return result;
  }

  void encode(bindings.Encoder encoder) {
    var encoder0 = encoder.getStructEncoderAtOffset(kVersions.last);
    const String structName = "Problem";
    String fieldName;
    try {
      fieldName = "type";
      encoder0.encodeString(type, 8, false);
      fieldName = "details";
      encoder0.encodeString(details, 16, true);
    } on bindings.MojoCodecError catch(e) {
      bindings.Struct.fixErrorMessage(e, fieldName, structName);
      rethrow;
    }
  }

  String toString() {
    return "Problem("
           "type: $type" ", "
           "details: $details" ")";
  }

  Map toJson() {
    Map map = new Map();
    map["type"] = type;
    map["details"] = details;
    return map;
  }
}



